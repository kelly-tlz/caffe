# This file is for the net_surgery.ipynb example notebook.
name: "text_topic_classification"
  layers {
  name: "data"
  type: HDF5_DATA
  top: "data"
  top: "label"
  hdf5_data_param {
    source: "filelist.txt"
    batch_size: 32 
#    batch_size: 128
  }
}

layers {
  name: "conv1"
  type: CONVOLUTION
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 4000
#    kernel_size: 3 
    kernel_h: 3
    kernel_w: 6
#    stride: 1 
  }
}
layers {
  name: "relu1"
  type: RELU
  bottom: "conv1"
  top: "conv1"
}
layers {
  name: "pool1"
  type: POOLING
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 4
    stride: 5 
  }
}
#layers {
#  name: "norm1"
#  type: LRN
#  bottom: "pool1"
#  top: "norm1"
#  lrn_param {
#    local_size: 5
#    alpha: 0.0001
#    beta: 0.75
#  }
#}
layers {
  name: "conv2"
  type: CONVOLUTION
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 2560
#    pad: 0 
    kernel_h: 5
    kernel_w: 1
#    group: 0 
  }
}
layers {
  name: "relu2"
  type: RELU
  bottom: "conv2"
  top: "conv2"
}
layers {
  name: "pool2"
  type: POOLING
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
#    kernel_size: 3
    kernel_h: 3
    kernel_w: 1
    stride: 2
  }
}
#layers {
#  name: "norm2"
#  type: LRN
#  bottom: "pool2"
#  top: "norm2"
#  lrn_param {
#    local_size: 5
#    alpha: 0.0001
#    beta: 0.75
#  }
#}
layers {
  name: "conv3"
  type: CONVOLUTION
  bottom: "pool2"
#  bottom: "norm2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
#    kernel_h: 3
#    kernel_w: 1
  }
}
layers {
  name: "relu3"
  type: RELU
  bottom: "conv3"
  top: "conv3"
}
layers {
  name: "conv4"
  type: CONVOLUTION
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3 #why ok ??
#    kernel_h: 3
#    kernel_w: 1
    group: 2
  }
}
layers {
  name: "relu4"
  type: RELU
  bottom: "conv4"
  top: "conv4"
}
layers {
  name: "conv5"
  type: CONVOLUTION
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
#    kernel_h: 3
#    kernel_w: 1
    kernel_size: 3
    group: 2
  }
}
layers {
  name: "relu5"
  type: RELU
  bottom: "conv5"
  top: "conv5"
}
layers {
  name: "pool5"
  type: POOLING
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
#    kernel_size: 3
    kernel_h: 3
    kernel_w: 1

    stride: 2
  }
}
layers {
  name: "fc6-conv"
  type: CONVOLUTION
  bottom: "pool5"
  top: "fc6-conv"
  convolution_param {
    num_output: 1024 # 4096
#    kernel_size: 6
    kernel_h: 6
    kernel_w: 1
  }
}
layers {
  name: "relu6"
  type: RELU
  bottom: "fc6-conv"
  top: "fc6-conv"
}
layers {
  name: "drop6"
  type: DROPOUT
  bottom: "fc6-conv"
  top: "fc6-conv"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  name: "fc6"
  type: INNER_PRODUCT
  bottom: "fc6-conv"
  top: "fc6"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 256 
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu6"
  type: RELU
  bottom: "fc6"
  top: "fc6"
}
layers {
  name: "drop6"
  type: DROPOUT
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  name: "fc7"
  type: INNER_PRODUCT
  bottom: "fc6"
#  bottom: "drop6"
  top: "fc7"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 128
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu7"
  type: RELU
  bottom: "fc7"
  top: "fc7"
}
layers {
  name: "drop7"
  type: DROPOUT
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  name: "fc8"
  type: INNER_PRODUCT
  bottom: "fc7"
  top: "fc8"
#  blobs_lr: 1
#  blobs_lr: 2
#  weight_decay: 1
#  weight_decay: 0
  inner_product_param {
    num_output: 50 
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}
layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
